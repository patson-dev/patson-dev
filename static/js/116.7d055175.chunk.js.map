{"version":3,"sources":["components/@dev/wizard/WizardBasic.js","components/@dev/wizard/WizardIcons.js","components/@dev/wizard/WizardValidation.js","components/@dev/wizard/Wizard.js","components/@dev/checkbox/CheckboxesVuexy.js","components/@dev/wizard/WizardComponent.js"],"names":["WizardBasic","state","steps","title","content","Row","Col","md","sm","FormGroup","Label","Input","type","CustomInput","name","id","rows","className","color","icon","size","label","defaultChecked","this","Card","CardHeader","CardTitle","CardBody","enableAllSteps","onFinish","alert","React","Component","WizardIcons","WizardValidation","required","defaultValue","validate","Wizard","Fragment","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","CheckBoxesVuexy","props","checked","value","disabled","onClick","onChange","VuexyWizard","activeStep","errors","values","handleNextStep","index","total","validation","length","setState","onValidationError","handlePreviousStep","handleEnableAllSteps","handleSubmit","e","FormTag","AvForm","Form","tabs","map","item","i","key","classnames","active","done","tabPaneClass","activeTab","tabId","onSubmit","preventDefault","pagination","finishBtnText","submitted","defaultProps"],"mappings":"kTAwJeA,E,4MArIbC,MAAQ,CACNC,MAAO,CACL,CACEC,MAAO,EACPC,QAAS,kBAACC,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAGhB,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAGhB,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,YAGhB,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACG,EAAA,EAAD,CAAaD,KAAK,SAASE,KAAK,SAASC,GAAG,QAC1C,4CACA,2CACA,iDACA,+CAKP,CACDZ,MAAO,EACPC,QAAS,kBAACC,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,UAEd,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAGhB,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAWI,KAAK,UAIjC,CACDb,MAAO,EACPC,QAAS,kBAACC,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAGhB,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yBACA,kBAACG,EAAA,EAAD,CAAaD,KAAK,SAASE,KAAK,SAASC,GAAG,YAC1C,4CACA,2CACA,iDACA,6CAIN,kBAACT,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uBACA,kBAACG,EAAA,EAAD,CAAaD,KAAK,SAASE,KAAK,SAASC,GAAG,UAC1C,4CACA,8CACA,+CAIN,kBAACT,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAOO,UAAU,QAAjB,kBACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CACEC,MAAM,UACNC,KAAM,kBAAC,IAAD,CAAOF,UAAU,UAAUG,KAAM,KACvCC,MAAM,WACNC,gBAAgB,KAGpB,yBAAKL,UAAU,kBACb,kBAAC,IAAD,CACEC,MAAM,UACNC,KAAM,kBAAC,IAAD,CAAOF,UAAU,UAAUG,KAAM,KACvCC,MAAM,WACNC,gBAAgB,Y,uDAWxB,IACApB,EAAUqB,KAAKtB,MAAfC,MACR,OACE,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,mCAEF,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,gBAAc,EACdC,SAAU,kBAAMC,MAAM,cACtB5B,MAAOA,U,GA9HO6B,IAAMC,W,2BCoIjBC,E,4MArIbhC,MAAQ,CACNC,MAAO,CACL,CACEC,MAAO,kBAAC,IAAD,CAAMiB,KAAM,KACnBhB,QAAS,kBAACC,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAGhB,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAGhB,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,YAGhB,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACG,EAAA,EAAD,CAAaD,KAAK,SAASE,KAAK,SAASC,GAAG,QAC1C,4CACA,2CACA,iDACA,+CAMV,CACEZ,MAAO,kBAAC,IAAD,CAAWiB,KAAM,KACxBhB,QAAS,kBAACC,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,UAEd,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAGhB,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAWI,KAAK,UAKpC,CACEb,MAAO,kBAAC,IAAD,CAAOiB,KAAM,KACpBhB,QAAS,kBAACC,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAGhB,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yBACA,kBAACG,EAAA,EAAD,CAAaD,KAAK,SAASE,KAAK,SAASC,GAAG,YAC1C,4CACA,2CACA,iDACA,6CAIN,kBAACT,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uBACA,kBAACG,EAAA,EAAD,CAAaD,KAAK,SAASE,KAAK,SAASC,GAAG,UAC1C,4CACA,8CACA,+CAIN,kBAACT,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAOO,UAAU,QAAjB,kBACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CACEC,MAAM,UACNC,KAAM,kBAAC,IAAD,CAAOF,UAAU,UAAUG,KAAM,KACvCC,MAAM,WACNC,gBAAgB,KAGpB,yBAAKL,UAAU,kBACb,kBAAC,IAAD,CACEC,MAAM,UACNC,KAAM,kBAAC,IAAD,CAAOF,UAAU,UAAUG,KAAM,KACvCC,MAAM,WACNC,gBAAgB,Y,uDAWxB,IACApB,EAAUqB,KAAKtB,MAAfC,MACR,OACE,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,2BAEF,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEzB,MAAOA,U,GA9HO6B,IAAMC,W,UC4IjBE,E,4MA7IbjC,MAAQ,CACNC,MAAO,CACL,CACEC,MAAO,EACPC,QAAS,kBAACC,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,UAAD,KACE,kBAACE,EAAA,EAAD,qBACA,kBAAC,UAAD,CAASI,KAAK,aAAaF,KAAK,OAAOuB,UAAQ,IAC/C,kBAAC,aAAD,wCAGJ,kBAAC7B,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,UAAD,KACE,kBAACE,EAAA,EAAD,oBACA,kBAAC,UAAD,CAASI,KAAK,YAAYF,KAAK,OAAOuB,UAAQ,IAC9C,kBAAC,aAAD,uCAGJ,kBAAC7B,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,UAAD,KACE,kBAACE,EAAA,EAAD,gBACA,kBAAC,UAAD,CAASI,KAAK,YAAYF,KAAK,QAAQuB,UAAQ,IAC/C,kBAAC,aAAD,mCAGJ,kBAAC7B,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,UAAD,KACE,kBAAC,UAAD,CAASI,KAAK,SAASE,KAAK,YAAYO,MAAM,YAAYc,UAAQ,GAChE,4BAAQC,cAAY,GAApB,eACA,4CACA,2CACA,iDACA,+CAMV,CACEjC,MAAO,EACPC,QAAS,kBAACC,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,UAAD,KACE,kBAACE,EAAA,EAAD,yBACA,kBAAC,UAAD,CAASI,KAAK,iBAAiBF,KAAK,OAAOuB,UAAQ,IACnD,kBAAC,aAAD,kCAEF,kBAAC,UAAD,KACE,kBAACzB,EAAA,EAAD,oBACA,kBAAC,UAAD,CAASI,KAAK,YAAYF,KAAK,OAAOuB,UAAQ,IAC9C,kBAAC,aAAD,uCAGJ,kBAAC7B,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,UAAD,KACE,kBAACE,EAAA,EAAD,+BACA,kBAAC,UAAD,CAASI,KAAK,cAAcF,KAAK,WAAWI,KAAK,IAAImB,UAAQ,IAC7D,kBAAC,aAAD,2CAKR,CACEhC,MAAO,EACPC,QAAS,kBAACC,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,UAAD,KACE,kBAACE,EAAA,EAAD,qBACA,kBAAC,UAAD,CAASI,KAAK,aAAaF,KAAK,OAAOuB,UAAQ,IAC/C,kBAAC,aAAD,qBAGJ,kBAAC7B,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,UAAD,KACE,kBAAC,UAAD,CAASI,KAAK,SAASE,KAAK,YAAYO,MAAM,YAAYc,UAAQ,GAChE,4BAAQC,cAAY,GAApB,eACA,4CACA,2CACA,iDACA,6CAIN,kBAAC9B,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,UAAD,KACE,kBAAC,UAAD,CAASI,KAAK,SAASE,KAAK,SAASO,MAAM,eAAec,UAAQ,GAChE,4CACA,8CACA,+CAIN,kBAAC7B,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,UAAD,KACE,kBAACE,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAOO,UAAU,QAAjB,kBACA,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CACEC,MAAM,UACNC,KAAM,kBAAC,IAAD,CAAOF,UAAU,UAAUG,KAAM,KACvCC,MAAM,WACNC,gBAAgB,KAGpB,yBAAKL,UAAU,kBACb,kBAAC,IAAD,CACEC,MAAM,UACNC,KAAM,kBAAC,IAAD,CAAOF,UAAU,UAAUG,KAAM,KACvCC,MAAM,WACNC,gBAAgB,Y,uDAYxB,IACApB,EAAUqB,KAAKtB,MAAfC,MACR,OACE,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gCAEF,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEU,UAAQ,EACRnC,MAAOA,U,GAtIY6B,IAAMC,WCR/BM,E,uKAEF,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,gBAAgB,SAChBC,iBAAiB,mBACjBC,iBAAiB,WAEnB,kBAACtC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,MACN,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKE,GAAG,MACN,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKE,GAAG,MACN,kBAAC,EAAD,a,GAjBSuB,IAAMC,WAwBZM,a,qFC7BTM,E,uKAEF,OACE,yBACE3B,UAAS,0BACPM,KAAKsB,MAAM5B,UAAYM,KAAKsB,MAAM5B,UAAY,GADvC,wBAEOM,KAAKsB,MAAM3B,QAE3B,2BACEN,KAAK,WACLU,eAAgBC,KAAKsB,MAAMvB,eAC3BwB,QAASvB,KAAKsB,MAAMC,QACpBC,MAAOxB,KAAKsB,MAAME,MAClBC,SAAUzB,KAAKsB,MAAMG,SACrBC,QAAS1B,KAAKsB,MAAMI,QAAU1B,KAAKsB,MAAMI,QAAU,KACnDC,SAAU3B,KAAKsB,MAAMK,SAAW3B,KAAKsB,MAAMK,SAAW,OAExD,0BACEjC,UAAS,kCACPM,KAAKsB,MAAMzB,KAAOG,KAAKsB,MAAMzB,KAAO,OAGtC,0BAAMH,UAAU,sBAAsBM,KAAKsB,MAAM1B,OAEnD,8BAAOI,KAAKsB,MAAMxB,Y,GAxBIU,IAAMC,WA8BrBY,O,8KCjBTO,E,4MAaJlD,MAAQ,CACNmD,WAAY,EAAKP,MAAMO,WAAa,EAAKP,MAAMO,WAAa,EAC5DC,OAAQ,GACRC,OAAQ,I,EAGVC,eAAiB,SAACC,EAAOC,GAAwB,IAAjBJ,EAAgB,uDAAP,GACnCD,EAAa,EAAKnD,MAAMmD,WACxBM,EAAa,EAAKb,MAAMR,SAE5B,GAAKqB,EAOH,GAAsB,IAAlBL,EAAOM,QAAgBP,GAAcI,GAASJ,IAAeK,EAC/D,EAAKG,SAAS,CACZR,WAAYA,EAAa,QAEtB,KAAIC,EAAOM,SAAU,EAAKd,MAAMgB,kBAGrC,OAFA,EAAKhB,MAAMgB,kBAAkB,EAAK5D,MAAMoD,aAXtCD,GAAcI,GAASJ,IAAeK,GACxC,EAAKG,SAAS,CACZR,WAAYA,EAAa,K,EAgBjCU,mBAAqB,SAAAN,GACnB,IAAIJ,EAAa,EAAKnD,MAAMmD,WACxBA,GAAcI,GAChB,EAAKI,SAAS,CACZR,WAAYA,EAAa,K,EAI/BW,qBAAuB,SAAAP,GACjB,EAAKX,MAAMjB,gBACb,EAAKgC,SAAS,CAAER,WAAYI,K,EAIhCQ,aAAe,SAAAC,GAEX,EAAKpB,MAAM3C,MAAMyD,OAAS,IAAM,EAAK1D,MAAMmD,YAC3C,EAAKP,MAAMhB,UAEX,EAAKgB,MAAMhB,SAASoC,I,uDAId,IAAD,OACHC,EAAU3C,KAAKsB,MAAMR,SAAW8B,SAASC,IAE7C,OACE,kBAAC,IAAM7B,SAAP,KACE,kBAAC,IAAD,CACEtB,UAAS,oBACPM,KAAKsB,MAAM5B,UAAYM,KAAKsB,MAAM5B,UAAY,IAEhDoD,MAAI,GACH9C,KAAKsB,MAAM3C,MAAMoE,KAAI,SAACC,EAAMC,GAC3B,OACE,kBAAC,IAAD,CACEvD,UAAU,eACVwD,IAAKD,EACLvB,QAAS,kBAAM,EAAKc,qBAAqBS,KACzC,kBAAC,IAAD,CACEvD,UAAWyD,IAAW,aAAD,OAAcF,GAAK,CACtCG,OAAQ,EAAK1E,MAAMmD,aAAeoB,EAClCI,KAAMJ,EAAI,EAAKvE,MAAMmD,cAEvB,0BAAMnC,UAAU,aAAasD,EAAKpE,aAM5C,kBAAC,IAAD,CACEc,UAAS,4BACPM,KAAKsB,MAAMgC,aAAetD,KAAKsB,MAAMgC,aAAe,IAEtDC,UAAWvD,KAAKtB,MAAMmD,YACrB7B,KAAKsB,MAAM3C,MAAMoE,KAAI,SAACC,EAAMC,GAC3B,OACE,kBAAC,IAAD,CACEvD,UAAS,4BAAuBuD,EAAvB,YACTC,IAAKD,EACLO,MAAOP,GACP,kBAACN,EAAD,CACEjD,UAAU,kBACV+D,SAAU,SAACf,EAAGZ,EAAQC,GACpB,EAAKM,SAAS,CAAEP,SAAQC,WACnB,EAAKT,MAAMR,UAAU4B,EAAEgB,iBAC5B,EAAK1B,eAAeiB,EAAG,EAAK3B,MAAM3C,MAAMyD,OAAS,EAAGN,GACpD,EAAKW,aAAaC,KAEnBM,EAAKnE,QACL,EAAKyC,MAAMqC,WACV,yBAAKjE,UAAU,iDACb,kBAAC,IAAD,CACEC,MAAM,UACN8B,SAAoC,IAA1B,EAAK/C,MAAMmD,WACrBH,QAAS,kBAAM,EAAKa,mBAAmBU,KAHzC,QAMA,kBAAC,IAAD,CAAQ5D,KAAK,SAASM,MAAM,WACzB,EAAK2B,MAAM3C,MAAMyD,OAAS,IAAMa,GAChC,EAAK3B,MAAMsC,cAER,EAAKtC,MAAM3C,MAAMyD,OAAS,IAAMa,GAChC,EAAK3B,MAAMsC,cACX,EAAKtC,MAAMsC,cACX,OAJA,WAON,e,gDAjIYtC,EAAO5C,GACrC,GAAI4C,EAAMO,YACJP,EAAMO,aAAenD,EAAMmD,WAAY,CACzC,IAAIP,EAAMR,SAGH,MAAO,CAAEe,WAAYP,EAAMO,YAFhC,GAA4B,IAAxBnD,EAAMoD,OAAOM,QAAgB1D,EAAMmF,UACrC,MAAO,CAAEhC,WAAYP,EAAMO,YAInC,OAAO,S,GAVerB,IAAMC,WAyJhCmB,EAAYkC,aAAe,CACzBH,YAAY,GAGC/B","file":"static/js/116.7d055175.chunk.js","sourcesContent":["import React from \"react\"\nimport Wizard from \"./WizardComponent\"\nimport {\n  // Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  // Button\n} from \"reactstrap\"\nimport Checkbox from \"../checkbox/CheckboxesVuexy\"\nimport { Check } from \"react-feather\"\nclass WizardBasic extends React.Component {\n  state = {\n    steps: [\n      {\n        title: 1,\n        content: <Row>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> First Name </Label>\n              <Input type=\"text\" />\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Last Name </Label>\n              <Input type=\"text\" />\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Email Name </Label>\n              <Input type=\"email\" />\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> City Name </Label>\n              <CustomInput type=\"select\" name=\"select\" id=\"city\">\n                <option>New York</option>\n                <option>Chicago</option>\n                <option>San Francisco</option>\n                <option>Boston</option>\n              </CustomInput>\n            </FormGroup>\n          </Col>\n        </Row>\n      }, {\n        title: 2,\n        content: <Row>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Proposal Title </Label>\n              <Input type=\"text\" />\n            </FormGroup>\n            <FormGroup>\n              <Label> Job Title </Label>\n              <Input type=\"text\" />\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Proposal Title </Label>\n              <Input type=\"textarea\" rows=\"5\" />\n            </FormGroup>\n          </Col>\n        </Row>\n      }, {\n        title: 3,\n        content: <Row>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Event Name </Label>\n              <Input type=\"text\" />\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Event Location </Label>\n              <CustomInput type=\"select\" name=\"select\" id=\"location\">\n                <option>New York</option>\n                <option>Chicago</option>\n                <option>San Francisco</option>\n                <option>Boston</option>\n              </CustomInput>\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Event Status </Label>\n              <CustomInput type=\"select\" name=\"select\" id=\"status\">\n                <option>Planning</option>\n                <option>In Process</option>\n                <option>Finished</option>\n              </CustomInput>\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Event Status </Label>\n              <Label className=\"mr-2\">Requirements :</Label>\n              <div className=\"stacked-checkbox\">\n                <div className=\"d-inline-block mr-2\">\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={16} />}\n                    label=\"Staffing\"\n                    defaultChecked={false}\n                  />\n                </div>\n                <div className=\"d-inline-block\">\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={16} />}\n                    label=\"Catering\"\n                    defaultChecked={false}\n                  />\n                </div>\n              </div>\n            </FormGroup>\n          </Col>\n        </Row>\n      }\n    ]\n  };\n\n  render() {\n    const { steps } = this.state\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Wizard with numbered tabs</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Wizard\n            enableAllSteps\n            onFinish={() => alert(\"submitted\")}\n            steps={steps}\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default WizardBasic\n","import React from \"react\"\nimport Wizard from \"./WizardComponent\"\nimport {\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n} from \"reactstrap\"\nimport Checkbox from \"../checkbox/CheckboxesVuexy\"\nimport { Check, Home, Briefcase, Image } from \"react-feather\"\nclass WizardIcons extends React.Component {\n  state = {\n    steps: [\n      {\n        title: <Home size={20} />,\n        content: <Row>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> First Name </Label>\n              <Input type=\"text\" />\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Last Name </Label>\n              <Input type=\"text\" />\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Email Name </Label>\n              <Input type=\"email\" />\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> City Name </Label>\n              <CustomInput type=\"select\" name=\"select\" id=\"city\">\n                <option>New York</option>\n                <option>Chicago</option>\n                <option>San Francisco</option>\n                <option>Boston</option>\n              </CustomInput>\n            </FormGroup>\n          </Col>\n        </Row>\n      },\n      {\n        title: <Briefcase size={20} />,\n        content: <Row>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Proposal Title </Label>\n              <Input type=\"text\" />\n            </FormGroup>\n            <FormGroup>\n              <Label> Job Title </Label>\n              <Input type=\"text\" />\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Proposal Title </Label>\n              <Input type=\"textarea\" rows=\"5\" />\n            </FormGroup>\n          </Col>\n        </Row>\n      },\n      {\n        title: <Image size={20} />,\n        content: <Row>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Event Name </Label>\n              <Input type=\"text\" />\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Event Location </Label>\n              <CustomInput type=\"select\" name=\"select\" id=\"location\">\n                <option>New York</option>\n                <option>Chicago</option>\n                <option>San Francisco</option>\n                <option>Boston</option>\n              </CustomInput>\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Event Status </Label>\n              <CustomInput type=\"select\" name=\"select\" id=\"status\">\n                <option>Planning</option>\n                <option>In Process</option>\n                <option>Finished</option>\n              </CustomInput>\n            </FormGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <FormGroup>\n              <Label> Event Status </Label>\n              <Label className=\"mr-2\">Requirements :</Label>\n              <div className=\"stacked-checkbox\">\n                <div className=\"d-inline-block mr-2\">\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={16} />}\n                    label=\"Staffing\"\n                    defaultChecked={false}\n                  />\n                </div>\n                <div className=\"d-inline-block\">\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={16} />}\n                    label=\"Catering\"\n                    defaultChecked={false}\n                  />\n                </div>\n              </div>\n            </FormGroup>\n          </Col>\n        </Row>\n      }\n    ]\n  }\n\n  render() {\n    const { steps } = this.state\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Wizard with Icons</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Wizard\n            steps={steps}\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default WizardIcons\n","import React from \"react\"\nimport Wizard from \"./WizardComponent\"\nimport { AvInput, AvGroup, AvFeedback, AvField } from \"availity-reactstrap-validation\"\nimport {\n  Label,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader\n} from \"reactstrap\"\nimport Checkbox from \"../checkbox/CheckboxesVuexy\"\nimport { Check } from \"react-feather\"\nclass WizardValidation extends React.Component {\n  state = {\n    steps: [\n      {\n        title: 1,\n        content: <Row>\n          <Col md=\"6\" sm=\"12\">\n            <AvGroup>\n              <Label> First Name </Label>\n              <AvInput name=\"first-name\" type=\"text\" required />\n              <AvFeedback>Please enter valid First Name</AvFeedback>\n            </AvGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <AvGroup>\n              <Label> Last Name </Label>\n              <AvInput name=\"last-name\" type=\"text\" required />\n              <AvFeedback>Please enter valid Last Name</AvFeedback>\n            </AvGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <AvGroup>\n              <Label> Email </Label>\n              <AvInput name=\"last-name\" type=\"email\" required />\n              <AvFeedback>Please enter valid email</AvFeedback>\n            </AvGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <AvGroup>\n              <AvField type=\"select\" name=\"city-name\" label=\"City Name\" required>\n                <option defaultValue>Select City</option>\n                <option>New York</option>\n                <option>Chicago</option>\n                <option>San Francisco</option>\n                <option>Boston</option>\n              </AvField>\n            </AvGroup>\n          </Col>\n        </Row>\n      },\n      {\n        title: 2,\n        content: <Row>\n          <Col md=\"6\" sm=\"12\">\n            <AvGroup>\n              <Label> Proposal Title </Label>\n              <AvInput name=\"Proposal-Title\" type=\"text\" required />\n              <AvFeedback>Please enter valid Title</AvFeedback>\n            </AvGroup>\n            <AvGroup>\n              <Label> Job Title </Label>\n              <AvInput name=\"Job-Title\" type=\"text\" required />\n              <AvFeedback>Please enter valid Job Title</AvFeedback>\n            </AvGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <AvGroup>\n              <Label> Proposal Description </Label>\n              <AvInput name=\"description\" type=\"textarea\" rows=\"5\" required />\n              <AvFeedback>Please enter valid Description</AvFeedback>\n            </AvGroup>\n          </Col>\n        </Row>\n      },\n      {\n        title: 3,\n        content: <Row>\n          <Col md=\"6\" sm=\"12\">\n            <AvGroup>\n              <Label> Event Name </Label>\n              <AvInput name=\"Event-Name\" type=\"text\" required />\n              <AvFeedback>Event Name</AvFeedback>\n            </AvGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <AvGroup>\n              <AvField type=\"select\" name=\"city-name\" label=\"City Name\" required>\n                <option defaultValue>Select City</option>\n                <option>New York</option>\n                <option>Chicago</option>\n                <option>San Francisco</option>\n                <option>Boston</option>\n              </AvField>\n            </AvGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <AvGroup>\n              <AvField type=\"select\" name=\"status\" label=\"Event Status\" required>\n                <option>Planning</option>\n                <option>In Process</option>\n                <option>Finished</option>\n              </AvField>\n            </AvGroup>\n          </Col>\n          <Col md=\"6\" sm=\"12\">\n            <AvGroup>\n              <Label> Event Status </Label>\n              <Label className=\"mr-2\">Requirements :</Label>\n              <div className=\"stacked-checkbox\">\n                <div className=\"d-inline-block mr-2\">\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={16} />}\n                    label=\"Staffing\"\n                    defaultChecked={false}\n                  />\n                </div>\n                <div className=\"d-inline-block\">\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={16} />}\n                    label=\"Catering\"\n                    defaultChecked={false}\n                  />\n                </div>\n              </div>\n            </AvGroup>\n          </Col>\n        </Row>\n      }\n    ]\n  }\n\n\n  render() {\n    const { steps } = this.state\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Wizard with Validation</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Wizard\n            validate\n            steps={steps}\n          />\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default WizardValidation\n","import React from \"react\";\nimport BreadCrumbs from \"../../@dev/breadCrumbs/BreadCrumb\";\nimport { Row, Col } from \"reactstrap\";\nimport WizardBasic from \"./WizardBasic\";\nimport WizardIcons from \"./WizardIcons\";\nimport WizardValidation from \"./WizardValidation\";\nclass Wizard extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Wizard\"\n          breadCrumbParent=\"Extra Components\"\n          breadCrumbActive=\"Wizard\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <WizardBasic />\n          </Col>\n          <Col sm=\"12\">\n            <WizardIcons />\n          </Col>\n          <Col sm=\"12\">\n            <WizardValidation />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\nexport default Wizard;\n","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport classnames from \"classnames\"\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane,\n  Form,\n  Button\n} from \"reactstrap\"\nimport { AvForm } from \"availity-reactstrap-validation\"\n\nclass VuexyWizard extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.activeStep) {\n      if (props.activeStep !== state.activeStep) {\n        if (props.validate) {\n          if (state.errors.length === 0 && state.submitted)\n            return { activeStep: props.activeStep }\n        } else return { activeStep: props.activeStep }\n      }\n    }\n    return null\n  }\n\n  state = {\n    activeStep: this.props.activeStep ? this.props.activeStep : 0,\n    errors: [],\n    values: []\n  }\n\n  handleNextStep = (index, total, errors = []) => {\n    let activeStep = this.state.activeStep\n    let validation = this.props.validate\n\n    if (!validation) {\n      if (activeStep <= index && activeStep !== total) {\n        this.setState({\n          activeStep: activeStep + 1\n        })\n      }\n    } else {\n      if (errors.length === 0 && activeStep <= index && activeStep !== total) {\n        this.setState({\n          activeStep: activeStep + 1\n        })\n      } else if (errors.length && this.props.onValidationError) {\n        this.props.onValidationError(this.state.errors)\n      } else {\n        return\n      }\n    }\n  }\n\n  handlePreviousStep = index => {\n    let activeStep = this.state.activeStep\n    if (activeStep >= index)\n      this.setState({\n        activeStep: activeStep - 1\n      })\n  }\n\n  handleEnableAllSteps = index => {\n    if (this.props.enableAllSteps) {\n      this.setState({ activeStep: index })\n    }\n  }\n\n  handleSubmit = e => {\n    if (\n      this.props.steps.length - 1 === this.state.activeStep &&\n      this.props.onFinish\n    ) {\n      this.props.onFinish(e)\n    }\n  }\n\n  render() {\n    let FormTag = this.props.validate ? AvForm : Form\n\n    return (\n      <React.Fragment>\n        <Nav\n          className={`vx-wizard ${\n            this.props.className ? this.props.className : \"\"\n          }`}\n          tabs>\n          {this.props.steps.map((item, i) => {\n            return (\n              <NavItem\n                className=\"step-wrapper\"\n                key={i}\n                onClick={() => this.handleEnableAllSteps(i)}>\n                <NavLink\n                  className={classnames(`step step-${i}`, {\n                    active: this.state.activeStep === i ? true : false,\n                    done: i < this.state.activeStep\n                  })}>\n                  <span className=\"step-text\">{item.title}</span>\n                </NavLink>\n              </NavItem>\n            )\n          })}\n        </Nav>\n        <TabContent\n          className={`vx-wizard-content ${\n            this.props.tabPaneClass ? this.props.tabPaneClass : \"\"\n          }`}\n          activeTab={this.state.activeStep}>\n          {this.props.steps.map((item, i) => {\n            return (\n              <TabPane\n                className={`step-content step-${i}-content`}\n                key={i}\n                tabId={i}>\n                <FormTag\n                  className=\"form-horizontal\"\n                  onSubmit={(e, errors, values) => {\n                    this.setState({ errors, values })\n                    if (!this.props.validate) e.preventDefault()\n                    this.handleNextStep(i, this.props.steps.length - 1, errors)\n                    this.handleSubmit(e)\n                  }}>\n                  {item.content}\n                  {this.props.pagination ? (\n                    <div className=\"wizard-actions d-flex justify-content-between\">\n                      <Button\n                        color=\"primary\"\n                        disabled={this.state.activeStep === 0}\n                        onClick={() => this.handlePreviousStep(i)}>\n                        Prev\n                      </Button>\n                      <Button type=\"submit\" color=\"primary\">\n                        {this.props.steps.length - 1 === i &&\n                        !this.props.finishBtnText\n                          ? \"Submit\"\n                          : this.props.steps.length - 1 === i &&\n                            this.props.finishBtnText\n                          ? this.props.finishBtnText\n                          : \"Next\"}\n                      </Button>\n                    </div>\n                  ) : null}\n                </FormTag>\n              </TabPane>\n            )\n          })}\n        </TabContent>\n      </React.Fragment>\n    )\n  }\n}\n\nVuexyWizard.propTypes = {\n  className: PropTypes.string,\n  steps: PropTypes.array.isRequired,\n  validate: PropTypes.bool,\n  enableAllSteps: PropTypes.bool,\n  finishBtnText: PropTypes.string,\n  onFinish: PropTypes.func,\n  pagination: PropTypes.bool,\n  onValidationError: PropTypes.func,\n  activeStep: PropTypes.number\n}\n\nVuexyWizard.defaultProps = {\n  pagination: true\n}\n\nexport default VuexyWizard\n"],"sourceRoot":""}