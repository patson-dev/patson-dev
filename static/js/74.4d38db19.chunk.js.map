{"version":3,"sources":["redux/actions/chat/index.js","views/apps/chat/ChatSidebar.js","views/apps/chat/ChatLog.js","views/apps/chat/receiverProfile.js","views/apps/chat/UserSidebar.js","views/apps/chat/Chat.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js"],"names":["getChats","dispatch","axios","get","then","response","type","contacts","data","chats","catch","err","console","log","ChatSidebar","state","chatsContacts","messages","status","value","getChatContents","props","getContactChats","handleOnChange","e","setState","target","searchContacts","this","chat","chatContacts","contactsArr","length","filteredContacts","chatsArr","filteredChats","renderContacts","map","contact","key","uid","onClick","handleActiveChat","markSeenAllMessages","mainSidebar","className","src","photoURL","alt","displayName","height","width","about","renderChats","Array","isArray","lastMsg","msg","slice","lastMsgDate","Date","time","lastMsgMonth","toLocaleString","month","lastMsgDay","getDate","pendingMsg","filter","i","isSeen","isSent","activeID","undefined","activeChatID","textContent","Badge","color","pill","Card","size","handleUserSidebar","userImg","FormGroup","Input","placeholder","onChange","options","wheelPropagation","React","Component","connect","chatApp","query","id","post","contactId","ChatLog","activeUser","activeChat","handleSendMessage","isPinned","text","sendMessage","handleTime","time_to","time_from","date_time_to","parse","date_time_from","getFullYear","getMonth","scrollToBottom","chatContainer","ReactDOM","findDOMNode","chatArea","scrollTop","scrollHeight","activeUserUid","Fragment","renderSentTime","mql","matches","handleReceiverSidebar","togglePinned","stroke","ref","el","onSubmit","preventDefault","Button","newMsg","toString","message","ReceiverProfile","receiverProfile","UserSidebar","userProfile","name","rows","maxLength","label","defaultChecked","changeStatus","window","matchMedia","Chat","sidebarDocked","sidebarOpen","userSidebar","user","onSetSidebarOpen","open","mediaQueryChanged","addListener","removeListener","Consumer","context","sidebar","docked","touch","sidebarClassName","contentClassName","pullRight","direction","defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","_this","call","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","saveSidebarWidth","componentDidUpdate","isTouching","ev","targetTouches","identifier","clientX","ind","touchWidth","touchSidebarWidth","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","Math","abs","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","style","root","role","rootId","hasBoxShadow","shadow","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","createElement","sidebarId","overlayClassName","overlayId","contentId","children","defaultProps","defineProperty","module","exports","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","enumerable","forEach"],"mappings":"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","file":"static/js/74.4d38db19.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport const getChats = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"api/app/chat/chats\")\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"GET_CONTACTS\",\r\n          contacts: response.data.contacts,\r\n          chats: response.data.chats\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getContactChats = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"api/app/chat/chat-contacts\")\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"GET_CHAT_CONTACTS\",\r\n          chats: response.data\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const togglePinned = (id, value) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/apps/chat/set-pinned/\", {\r\n        contactId: id,\r\n        value\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"SET_PINNED\",\r\n          id,\r\n          value\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const sendMessage = (id, isPinned, text) => {\r\n  if (text.length > 0) {\r\n    return dispatch => {\r\n      let newMsg = {\r\n        textContent: text,\r\n        isSent: true,\r\n        isSeen: false,\r\n        time: new Date().toString()\r\n      }\r\n      axios\r\n        .post(\"/api/app/chat/send-message\", {\r\n          contactId: id,\r\n          message: newMsg,\r\n          isPinned\r\n        })\r\n        .then(response => {\r\n          dispatch({\r\n            type: \"SEND_MESSAGE\",\r\n            msg: newMsg,\r\n            id,\r\n            isPinned,\r\n            text\r\n          })\r\n          dispatch(getChats())\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  } else {\r\n    return\r\n  }\r\n}\r\n\r\nexport const changeStatus = status => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"CHANGE_STATUS\",\r\n      status\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchContacts = query => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SEARCH_CONTACTS\",\r\n      query\r\n    })\r\n  }\r\n}\r\n\r\nexport const markSeenAllMessages = id => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/apps/chat/mark-all-seen/\", {\r\n        contactId: id\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"MARK_AS_SEEN\",\r\n          id\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n","import React from \"react\"\nimport { Card, FormGroup, Input, Badge } from \"reactstrap\"\nimport { X, Search } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n} from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nclass ChatSidebar extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.chat.chatContacts.length !== state.chatContacts ||\n      props.chat.contacts.length !== state.contacts ||\n      props.chat.chats.length !== state.chats ||\n      props.chat.status !== state.status\n    ) {\n      return {\n        chatsContacts: props.chat.chatContacts,\n        contacts: props.chat.contacts,\n        chats: props.chat.chats,\n        status: props.chat.status\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    chatsContacts: [],\n    contacts: [],\n    messages: [],\n    status: null,\n    value: \"\"\n  }\n\n  getChatContents = () => {\n    this.props.getChats()\n    this.props.getContactChats()\n  }\n\n  async componentDidMount() {\n    await this.getChatContents()\n    this.setState({\n      chatsContacts: this.props.chat.chatContacts,\n      contacts: this.props.chat.contacts,\n      chats: this.props.chat.chats,\n      status: this.props.chat.status\n    })\n  }\n\n  handleOnChange = e => {\n    this.setState({ value: e.target.value })\n    this.props.searchContacts(e.target.value)\n  }\n\n  render() {\n    const { contacts, chatsContacts, chats, status, value } = this.state\n    const contactsArr = value.length\n      ? this.props.chat.filteredContacts\n      : contacts\n    const chatsArr = value.length\n      ? this.props.chat.filteredChats\n      : chatsContacts\n    let renderContacts =\n      contactsArr.length > 0\n        ? contactsArr.map(contact => (\n            <li\n              key={contact.uid}\n              onClick={() => {\n                this.props.handleActiveChat(\n                  contact.uid,\n                  contact,\n                  chats[contact.uid]\n                )\n                this.props.markSeenAllMessages(contact.uid)\n                this.props.mainSidebar(false)\n              }}\n            >\n              <div className=\"pr-1\">\n                <span className=\"avatar avatar-md m-0\">\n                  <img\n                    src={contact.photoURL}\n                    alt={contact.displayName}\n                    height=\"38\"\n                    width=\"38\"\n                  />\n                </span>\n              </div>\n              <div className=\"user-chat-info\">\n                <div className=\"contact-info\">\n                  <h5 className=\"text-bold-600 mb-0\">{contact.displayName}</h5>\n                  <p className=\"truncate\">{contact.about}</p>\n                </div>\n              </div>\n            </li>\n          ))\n        : null\n    let renderChats =\n      chatsArr && Array.isArray(chatsArr)\n        ? chatsArr.map(chat => {\n            let lastMsg =\n                chats[chat.uid] && chats[chat.uid].msg\n                  ? chats[chat.uid].msg.slice(-1)[0]\n                  : null,\n              lastMsgDate = new Date(\n                lastMsg && lastMsg.time ? lastMsg.time : null\n              ),\n              lastMsgMonth = lastMsgDate.toLocaleString(\"default\", {\n                month: \"short\"\n              }),\n              lastMsgDay = lastMsgDate.getDate()\n            let pendingMsg =\n              chats[chat.uid] && chats[chat.uid].msg\n                ? chats[chat.uid].msg.filter(\n                    i => i.isSeen === false && i.isSent !== true\n                  ).length\n                : null\n            let activeID =\n              chats[chat.uid] !== undefined ? chats[chat.uid] : null\n            return (\n              <li\n                key={chat.uid}\n                onClick={() => {\n                  this.props.handleActiveChat(chat.uid, chat, activeID)\n                  this.props.mainSidebar(false)\n                  this.props.markSeenAllMessages(chat.uid)\n                }}\n                className={`${\n                  this.props.activeChatID === chat.uid ? \"active\" : \"\"\n                }`}\n              >\n                <div className=\"pr-1\">\n                  <span className=\"avatar avatar-md m-0\">\n                    <img\n                      src={chat.photoURL}\n                      alt={chat.displayName}\n                      height=\"38\"\n                      width=\"38\"\n                    />\n                  </span>\n                </div>\n                <div className=\"user-chat-info\">\n                  <div className=\"contact-info\">\n                    <h5 className=\"text-bold-600 mb-0\">{chat.displayName}</h5>\n                    <p className=\"truncate\">\n                      {lastMsg ? lastMsg.textContent : chat.about}\n                    </p>\n                  </div>\n                  <div className=\"contact-meta d-flex- flex-column\">\n                    <span className=\"float-right mb-25\">\n                      {lastMsgMonth + \" \" + lastMsgDay}\n                    </span>\n                    {pendingMsg > 0 ? (\n                      <div className=\"unseen-msg\">\n                        <Badge\n                          className=\"badge-md float-right\"\n                          color=\"primary\"\n                          pill\n                        >\n                          {pendingMsg}\n                        </Badge>\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n              </li>\n            )\n          })\n        : null\n    return (\n      <Card className=\"sidebar-content h-100\">\n        <span\n          className=\"sidebar-close-icon\"\n          onClick={() => this.props.mainSidebar(false)}\n        >\n          <X size={15} />\n        </span>\n        <div className=\"chat-fixed-search\">\n          <div className=\"d-flex align-items-center\">\n            <div className=\"sidebar-profile-toggle position-relative d-inline-flex\">\n              <div\n                className=\"avatar\"\n                onClick={() => this.props.handleUserSidebar(\"open\")}\n              >\n                <img src={userImg} alt=\"User Profile\" height=\"40\" width=\"40\" />\n                <span\n                  className={\n                    status === \"dnd\"\n                      ? \"avatar-status-busy\"\n                      : status === \"away\"\n                      ? \"avatar-status-away\"\n                      : status === \"offline\"\n                      ? \"avatar-status-offline\"\n                      : \"avatar-status-online\"\n                  }\n                />\n              </div>\n            </div>\n            <FormGroup className=\"position-relative has-icon-left mx-1 my-0 w-100\">\n              <Input\n                className=\"round\"\n                type=\"text\"\n                placeholder=\"Search contact or start a new chat\"\n                onChange={e => this.handleOnChange(e)}\n                value={value}\n              />\n              <div className=\"form-control-position\">\n                <Search size={15} />\n              </div>\n            </FormGroup>\n          </div>\n        </div>\n        <PerfectScrollbar\n          className=\"chat-user-list list-group\"\n          options={{\n            wheelPropagation: false\n          }}\n        >\n          <h3 className=\"primary p-1 mb-0\">Chats</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">{renderChats}</ul>\n          <h3 className=\"primary p-1 mb-0\">Contacts</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">\n            {renderContacts}\n          </ul>\n        </PerfectScrollbar>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n})(ChatSidebar)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Input, Button } from \"reactstrap\"\nimport { MessageSquare, Menu, Star, Send } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport { togglePinned, sendMessage } from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nclass ChatLog extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.activeUser !== state.activeChat ||\n      props.activeChat !== state.activeChat\n    ) {\n      return {\n        activeUser: props.activeUser,\n        activeChat: props.activeChat\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    msg: \"\",\n    activeUser: null,\n    activeChat: null\n  }\n\n  handleSendMessage = (id, isPinned, text) => {\n    if (text.length > 0) {\n      this.props.sendMessage(id, isPinned, text)\n      this.setState({\n        msg: \"\"\n      })\n    }\n  }\n  componentDidMount() {\n    this.scrollToBottom()\n  }\n  componentDidUpdate() {\n    this.scrollToBottom()\n  }\n\n  handleTime = (time_to, time_from) => {\n    const date_time_to = new Date(Date.parse(time_to))\n    const date_time_from = new Date(Date.parse(time_from))\n    return (\n      date_time_to.getFullYear() === date_time_from.getFullYear() &&\n      date_time_to.getMonth() === date_time_from.getMonth() &&\n      date_time_to.getDate() === date_time_from.getDate()\n    )\n  }\n\n  scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(this.chatArea)\n    chatContainer.scrollTop = chatContainer.scrollHeight\n  }\n\n  render() {\n    const { activeUser } = this.state\n    let activeUserUid = activeUser && activeUser.uid ? activeUser.uid : null,\n      activeChat =\n        activeUser && activeUser.uid\n          ? this.props.chat.chats[activeUserUid]\n          : null\n\n    let renderChats =\n      activeChat && activeChat !== undefined && activeChat.msg\n        ? activeChat.msg.map((chat, i) => {\n            let renderSentTime = () => {\n              if (\n                i > 0 &&\n                !this.handleTime(chat.time, activeChat.msg[i - 1].time)\n              ) {\n                return (\n                  <div className=\"divider\">\n                    <div className=\"divider-text\">\n                      {new Date().getDate() +\n                        \" \" +\n                        new Date().toLocaleString(\"default\", {\n                          month: \"short\"\n                        })}\n                    </div>\n                  </div>\n                )\n              }\n            }\n            let renderAvatar = () => {\n              if (i > 0) {\n                if (\n                  chat.isSent === true &&\n                  activeChat.msg[i - 1].isSent !== true\n                ) {\n                  return (\n                    <div className=\"chat-avatar\">\n                      <div className=\"avatar m-0\">\n                        <img\n                          src={userImg}\n                          alt=\"chat avatar\"\n                          height=\"40\"\n                          width=\"40\"\n                        />\n                      </div>\n                    </div>\n                  )\n                } else if (chat.isSent !== true) {\n                  return (\n                    <div className=\"chat-avatar\">\n                      <div className=\"avatar m-0\">\n                        <img\n                          src={activeUser.photoURL}\n                          alt=\"chat avatar\"\n                          height=\"40\"\n                          width=\"40\"\n                        />\n                      </div>\n                    </div>\n                  )\n                } else {\n                  return \"\"\n                }\n              } else {\n                return (\n                  <div className=\"chat-avatar\">\n                    <div className=\"avatar m-0\">\n                      <img\n                        src={chat.isSent ? userImg : activeUser.photoURL}\n                        alt=\"chat avatar\"\n                        height=\"40\"\n                        width=\"40\"\n                      />\n                    </div>\n                  </div>\n                )\n              }\n            }\n            return (\n              <React.Fragment key={i}>\n                {renderSentTime()}\n                <div\n                  className={`chat ${\n                    chat.isSent !== true ? \"chat-left\" : \"chat-right\"\n                  }`}>\n                  {renderAvatar()}\n                  <div className=\"chat-body\">\n                    <div className=\"chat-content\">{chat.textContent}</div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )\n          })\n        : null\n\n    return (\n      <div className=\"content-right\">\n        <div className=\"chat-app-window\">\n          <div\n            className={`start-chat-area ${\n              activeUser !== null ? \"d-none\" : \"d-flex\"\n            }`}>\n            <span className=\"mb-1 start-chat-icon\">\n              <MessageSquare size={50} />\n            </span>\n            <h4\n              className=\"py-50 px-1 sidebar-toggle start-chat-text\"\n              onClick={() => {\n                if (this.props.mql.matches === false) {\n                  this.props.mainSidebar(true)\n                } else {\n                  return null\n                }\n              }}>\n              Start Conversation\n            </h4>\n          </div>\n          <div\n            className={`active-chat ${\n              activeUser === null ? \"d-none\" : \"d-block\"\n            }`}>\n            <div className=\"chat_navbar\">\n              <header className=\"chat_header d-flex justify-content-between align-items-center p-1\">\n                <div className=\"d-flex align-items-center\">\n                  <div\n                    className=\"sidebar-toggle d-block d-lg-none mr-1\"\n                    onClick={() => this.props.mainSidebar(true)}>\n                    <Menu size={24} />\n                  </div>\n                  <div\n                    className=\"avatar user-profile-toggle m-0 m-0 mr-1\"\n                    onClick={() => this.props.handleReceiverSidebar(\"open\")}>\n                    <img\n                      src={activeUser !== null ? activeUser.photoURL : \"\"}\n                      alt={activeUser !== null ? activeUser.displayName : \"\"}\n                      height=\"40\"\n                      width=\"40\"\n                    />\n                    <span\n                      className={`\n                    ${\n                      activeUser !== null &&\n                      activeUser.status === \"do not disturb\"\n                        ? \"avatar-status-busy\"\n                        : activeUser !== null && activeUser.status === \"away\"\n                        ? \"avatar-status-away\"\n                        : activeUser !== null && activeUser.status === \"offline\"\n                        ? \"avatar-status-offline\"\n                        : \"avatar-status-online\"\n                    }\n                    `}\n                    />\n                  </div>\n                  <h6 className=\"mb-0\">\n                    {activeUser !== null ? activeUser.displayName : \"\"}\n                  </h6>\n                </div>\n                <span\n                  className=\"favorite\"\n                  onClick={() => {\n                    if (activeChat) {\n                      this.props.togglePinned(\n                        activeUser.uid,\n                        !activeChat.isPinned\n                      )\n                    }\n                  }}>\n                  <Star\n                    size={22}\n                    stroke={\n                      activeChat && activeChat.isPinned === true\n                        ? \"#FF9F43\"\n                        : \"#626262\"\n                    }\n                  />\n                </span>\n              </header>\n            </div>\n            <PerfectScrollbar\n              className=\"user-chats\"\n              options={{\n                wheelPropagation: false\n              }}\n              ref={el => {\n                this.chatArea = el\n              }}>\n              <div className=\"chats\">{renderChats}</div>\n            </PerfectScrollbar>\n            <div className=\"chat-app-form\">\n              <form\n                className=\"chat-app-input d-flex align-items-center\"\n                onSubmit={e => {\n                  e.preventDefault()\n                  this.handleSendMessage(\n                    activeUser.uid,\n                    false,\n                    this.state.msg,\n                    activeUser\n                  )\n                }}>\n                <Input\n                  type=\"text\"\n                  className=\"message mr-1 ml-50\"\n                  placeholder=\"Type your message\"\n                  value={this.state.msg}\n                  onChange={e => {\n                    e.preventDefault()\n                    this.setState({\n                      msg: e.target.value\n                    })\n                  }}\n                />\n                <Button color=\"primary\">\n                  <Send className=\"d-lg-none\" size={15} />\n                  <span className=\"d-lg-block d-none\">Send</span>\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, { togglePinned, sendMessage })(ChatLog)\n","import React from \"react\"\nimport { X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nclass ReceiverProfile extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.activeUser !== state.activeUser) {\n      return {\n        activeUser: props.activeUser\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    activeUser: null\n  }\n\n  render() {\n    const { activeUser } = this.state\n    return (\n      <div\n        className={`user-profile-sidebar ${\n          this.props.receiverProfile ? \"show\" : null\n        }`}\n      >\n        <header className=\"user-profile-header\">\n          <span\n            className=\"close-icon\"\n            onClick={() => this.props.handleReceiverSidebar(\"close\")}\n          >\n            <X size={24} />\n          </span>\n          <div className=\"header-profile-sidebar\">\n            <div className=\"avatar\">\n              <img\n                src={activeUser !== null ? activeUser.photoURL : null}\n                alt={activeUser !== null ? activeUser.displayName : null}\n                height=\"66\"\n                width=\"66\"\n              />\n              <span\n                className={`${\n                  activeUser !== null && activeUser.status === \"do not disturb\"\n                    ? \"avatar-status-busy\"\n                    : activeUser !== null && activeUser.status === \"away\"\n                    ? \"avatar-status-away\"\n                    : activeUser !== null && activeUser.status === \"offline\"\n                    ? \"avatar-status-offline\"\n                    : \"avatar-status-online\"\n                } avatar-status-lg`}\n              />\n            </div>\n            <h4 className=\"chat-user-name\">\n              {activeUser !== null ? activeUser.displayName : null}\n            </h4>\n          </div>\n        </header>\n        <PerfectScrollbar\n          className=\"user-profile-sidebar-area p-2\"\n          options={{\n            wheelPropagation: false\n          }}\n        >\n          <h6>About</h6>\n          <p>{activeUser !== null ? activeUser.about : null}</p>\n        </PerfectScrollbar>\n      </div>\n    )\n  }\n}\nexport default ReceiverProfile\n","import React from \"react\";\nimport { X } from \"react-feather\";\nimport { Input } from \"reactstrap\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { connect } from \"react-redux\";\nimport { changeStatus } from \"../../../redux/actions/chat/index\";\nimport Radio from \"../../../components/@dev/radio/RadioDev\";\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\";\nclass UserSidebar extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.chat.status !== state.status) {\n      return {\n        status: props.chat.status,\n      };\n    }\n    // Return null if the state hasn't changed\n    return null;\n  }\n\n  state = {\n    value:\n      \"Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.\",\n    status: null,\n  };\n\n  render() {\n    const status = this.state.status;\n    return (\n      <div\n        className={`chat-profile-sidebar ${\n          this.props.userProfile ? \"show\" : null\n        }`}\n      >\n        <header className=\"chat-profile-header\">\n          <div\n            className=\"close-icon\"\n            onClick={() => this.props.handleUserSidebar(\"close\")}\n          >\n            <X size={24} />\n          </div>\n          <div className=\"header-profile-sidebar\">\n            <div className=\"avatar\">\n              <img src={userImg} alt=\"User Profile\" height=\"66\" width=\"66\" />\n              <span\n                className={`${\n                  status === \"offline\"\n                    ? \"avatar-status-offline\"\n                    : status === \"dnd\"\n                    ? \"avatar-status-busy\"\n                    : status === \"away\"\n                    ? \"avatar-status-away\"\n                    : \"avatar-status-online\"\n                } avatar-status-lg`}\n              />\n            </div>\n            <h4 className=\"chat-user-name\">John Doe</h4>\n          </div>\n        </header>\n        <div className=\"profile-sidebar-area\">\n          <PerfectScrollbar\n            className=\"scroll-area\"\n            options={{\n              wheelPropagation: false,\n            }}\n          >\n            <h6>About</h6>\n            <div className=\"about-user\">\n              <Input\n                type=\"textarea\"\n                name=\"text\"\n                id=\"userAbout\"\n                rows=\"5\"\n                value={this.state.value}\n                maxLength=\"120\"\n                onChange={(e) => this.setState({ value: e.target.value })}\n              />\n              <small className=\"counter-value float-right\">\n                {`${this.state.value.length} / 120`}\n              </small>\n            </div>\n            <h3 className=\"mt-3\">Status</h3>\n            <ul className=\"list-unstyled user-status mb-0\">\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Active\"\n                  color=\"success\"\n                  defaultChecked={true}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"active\")}\n                />\n              </li>\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Do Not Disturb\"\n                  color=\"danger\"\n                  defaultChecked={false}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"dnd\")}\n                />\n              </li>\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Away\"\n                  color=\"warning\"\n                  defaultChecked={false}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"away\")}\n                />\n              </li>\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Offline\"\n                  color=\"secondary\"\n                  defaultChecked={false}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"offline\")}\n                />\n              </li>\n            </ul>\n          </PerfectScrollbar>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    chat: state.chatApp.chats,\n  };\n};\nexport default connect(mapStateToProps, { changeStatus })(UserSidebar);\n","import React from \"react\"\nimport Sidebar from \"react-sidebar\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport ChatSidebarContent from \"./ChatSidebar\"\nimport ChatLog from \"./ChatLog\"\nimport ReceiverSidebar from \"./receiverProfile\"\nimport UserSidebar from \"./UserSidebar\"\nimport \"../../../assets/scss/pages/app-chat.scss\"\nconst mql = window.matchMedia(`(min-width: 992px)`)\n\nclass Chat extends React.Component {\n  state = {\n    userProfile: false,\n    sidebarDocked: mql.matches,\n    sidebarOpen: false,\n    activeChatID: null,\n    activeChat: null,\n    activeUser: null,\n    receiverProfile: false,\n    userSidebar: false\n  }\n  // mounted = false\n  handleUserSidebar = status => {\n    if (status === \"open\") {\n      this.setState({\n        userProfile: true\n      })\n    } else {\n      this.setState({\n        userProfile: false\n      })\n    }\n  }\n  handleActiveChat = (id, user, chats) => {\n    this.setState({\n      activeChatID: id,\n      activeUser: user,\n      activeChat: chats\n    })\n  }\n\n  UNSAFE_componentWillMount() {\n    mql.addListener(this.mediaQueryChanged)\n  }\n\n  componentWillUnmount() {\n    mql.removeListener(this.mediaQueryChanged)\n  }\n\n  onSetSidebarOpen = open => {\n    this.setState({ sidebarOpen: open })\n  }\n\n  mediaQueryChanged = () => {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\n  }\n\n  handleReceiverSidebar = status => {\n    status === \"open\"\n      ? this.setState({\n          receiverProfile: true\n        })\n      : this.setState({\n          receiverProfile: false\n        })\n  }\n\n  handleUserSidebar = status => {\n    status === \"open\"\n      ? this.setState({\n          userSidebar: true\n        })\n      : this.setState({\n          userSidebar: false\n        })\n  }\n\n  render() {\n    return (\n      <div className=\"chat-application position-relative\">\n        <div\n          className={`chat-overlay ${\n            this.state.receiverProfile ||\n            this.state.userSidebar ||\n            this.state.sidebarOpen\n              ? \"show\"\n              : \"d-none\"\n          }`}\n          onClick={() => {\n            this.handleReceiverSidebar(\"close\")\n            this.handleUserSidebar(\"close\")\n            this.onSetSidebarOpen(false)\n          }}\n        />\n        <ContextLayout.Consumer>\n          {context => (\n            <Sidebar\n              sidebar={\n                <ChatSidebarContent\n                  activeChatID={this.state.activeChatID}\n                  handleActiveChat={this.handleActiveChat}\n                  handleUserSidebar={this.handleUserSidebar}\n                  mainSidebar={this.onSetSidebarOpen}\n                />\n              }\n              docked={this.state.sidebarDocked}\n              open={this.state.sidebarOpen}\n              touch={false}\n              sidebarClassName=\"chat-sidebar\"\n              contentClassName=\"sidebar-children d-none\"\n              pullRight={context.state.direction === \"rtl\"}>\n              \"\"\n            </Sidebar>\n          )}\n        </ContextLayout.Consumer>\n        <UserSidebar\n          userProfile={this.state.userSidebar}\n          handleUserSidebar={this.handleUserSidebar}\n        />\n        <ChatLog\n          activeChat={this.state.activeChat}\n          activeUser={this.state.activeUser}\n          handleReceiverSidebar={this.handleReceiverSidebar}\n          mainSidebar={this.onSetSidebarOpen}\n          mql={mql}\n          handleActiveChat={this.handleActiveChat}\n        />\n        <ReceiverSidebar\n          activeUser={this.state.activeUser}\n          receiverProfile={this.state.receiverProfile}\n          handleReceiverSidebar={this.handleReceiverSidebar}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Chat\n","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;"],"sourceRoot":""}