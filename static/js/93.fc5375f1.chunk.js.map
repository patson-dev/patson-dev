{"version":3,"sources":["components/@dev/wizard/WizardBasic.js","components/@dev/wizard/WizardIcons.js","components/@dev/wizard/WizardValidation.js","components/@dev/wizard/Wizard.js","components/@dev/checkbox/CheckboxesDev.js","components/@dev/wizard/WizardComponent.js"],"names":["WizardBasic","state","activeStep","steps","step_1","Form","className","Row","Col","md","sm","FormGroup","Label","Input","type","CustomInput","name","id","Button","color","disabled","onClick","handleActiveStep","step_2","rows","step_3","icon","size","label","defaultChecked","alert","step","setState","this","Card","CardHeader","CardTitle","CardBody","stepsTitle","stepsContent","React","Component","WizardIcons","WizardValidation","onSubmit","e","errors","required","selected","length","Wizard","Fragment","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","CheckboxesDev","props","checked","value","onChange","DevWizard","values","handleNextStep","index","total","validation","validate","onValidationError","handlePreviousStep","handleEnableAllSteps","enableAllSteps","handleSubmit","onFinish","FormTag","AvForm","tabs","map","item","i","key","classnames","active","done","title","tabPaneClass","activeTab","tabId","preventDefault","content","pagination","finishBtnText","submitted","defaultProps"],"mappings":"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","file":"static/js/93.fc5375f1.chunk.js","sourcesContent":["import React from \"react\";\nimport Wizard from \"./WizardComponent\";\nimport {\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  Button,\n} from \"reactstrap\";\nimport Checkbox from \"../checkbox/CheckboxesDev\";\nimport { Check } from \"react-feather\";\nclass WizardBasic extends React.Component {\n  state = {\n    activeStep: 0,\n    steps: {\n      step_1: (\n        <Form className=\"form-horizontal\">\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> First Name </Label>\n                <Input type=\"text\" />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Last Name </Label>\n                <Input type=\"text\" />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Email Name </Label>\n                <Input type=\"email\" />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> City Name </Label>\n                <CustomInput type=\"select\" name=\"select\" id=\"city\">\n                  <option>New York</option>\n                  <option>Chicago</option>\n                  <option>San Francisco</option>\n                  <option>Boston</option>\n                </CustomInput>\n              </FormGroup>\n            </Col>\n          </Row>\n          <div className=\"wizard-actions d-flex justify-content-between\">\n            <Button color=\"primary\" disabled>\n              Prev\n            </Button>\n            <Button color=\"primary\" onClick={() => this.handleActiveStep(1)}>\n              Next\n            </Button>\n          </div>\n        </Form>\n      ),\n      step_2: (\n        <Form className=\"form-horizontal\">\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Proposal Title </Label>\n                <Input type=\"text\" />\n              </FormGroup>\n              <FormGroup>\n                <Label> Job Title </Label>\n                <Input type=\"text\" />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Proposal Title </Label>\n                <Input type=\"textarea\" rows=\"5\" />\n              </FormGroup>\n            </Col>\n          </Row>\n          <div className=\"wizard-actions d-flex justify-content-between\">\n            <Button color=\"primary\" onClick={() => this.handleActiveStep(0)}>\n              Prev\n            </Button>\n            <Button color=\"primary\" onClick={() => this.handleActiveStep(2)}>\n              Next\n            </Button>\n          </div>\n        </Form>\n      ),\n      step_3: (\n        <Form className=\"form-horizontal\">\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Event Name </Label>\n                <Input type=\"text\" />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Event Location </Label>\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\n                  <option>New York</option>\n                  <option>Chicago</option>\n                  <option>San Francisco</option>\n                  <option>Boston</option>\n                </CustomInput>\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Event Status </Label>\n                <CustomInput type=\"select\" name=\"select\" id=\"status\">\n                  <option>Planning</option>\n                  <option>In Process</option>\n                  <option>Finished</option>\n                </CustomInput>\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Event Status </Label>\n                <Label className=\"mr-2\">Requirements :</Label>\n                <div className=\"stacked-checkbox\">\n                  <div className=\"d-inline-block mr-2\">\n                    <Checkbox\n                      color=\"primary\"\n                      icon={<Check className=\"vx-icon\" size={16} />}\n                      label=\"Staffing\"\n                      defaultChecked={false}\n                    />\n                  </div>\n                  <div className=\"d-inline-block\">\n                    <Checkbox\n                      color=\"primary\"\n                      icon={<Check className=\"vx-icon\" size={16} />}\n                      label=\"Catering\"\n                      defaultChecked={false}\n                    />\n                  </div>\n                </div>\n              </FormGroup>\n            </Col>\n          </Row>\n          <div className=\"wizard-actions d-flex justify-content-between\">\n            <Button color=\"primary\" onClick={() => this.handleActiveStep(1)}>\n              Prev\n            </Button>\n            <Button color=\"primary\" onClick={() => alert(\"Form Submitted\")}>\n              Submit\n            </Button>\n          </div>\n        </Form>\n      ),\n    },\n  };\n\n  handleActiveStep = (step) => {\n    this.setState({\n      activeStep: step,\n    });\n  };\n\n  render() {\n    const { steps } = this.state;\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Wizard with numbered tabs</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Wizard\n            activeStep={this.state.activeStep}\n            stepsTitle={[1, 2, 3]}\n            stepsContent={[steps.step_1, steps.step_2, steps.step_3]}\n          ></Wizard>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default WizardBasic;\n","import React from \"react\";\nimport Wizard from \"./WizardComponent\";\nimport {\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  Button,\n} from \"reactstrap\";\nimport Checkbox from \"../checkbox/CheckboxesDev\";\nimport { Check, Home, Briefcase, Image } from \"react-feather\";\nclass WizardIcons extends React.Component {\n  state = {\n    activeStep: 0,\n    steps: {\n      step_1: (\n        <Form className=\"form-horizontal\">\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> First Name </Label>\n                <Input type=\"text\" />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Last Name </Label>\n                <Input type=\"text\" />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Email Name </Label>\n                <Input type=\"email\" />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> City Name </Label>\n                <CustomInput type=\"select\" name=\"select\" id=\"city\">\n                  <option>New York</option>\n                  <option>Chicago</option>\n                  <option>San Francisco</option>\n                  <option>Boston</option>\n                </CustomInput>\n              </FormGroup>\n            </Col>\n          </Row>\n          <div className=\"wizard-actions d-flex justify-content-between\">\n            <Button color=\"primary\" disabled>\n              Prev\n            </Button>\n            <Button color=\"primary\" onClick={() => this.handleActiveStep(1)}>\n              Next\n            </Button>\n          </div>\n        </Form>\n      ),\n      step_2: (\n        <Form className=\"form-horizontal\">\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Proposal Title </Label>\n                <Input type=\"text\" />\n              </FormGroup>\n              <FormGroup>\n                <Label> Job Title </Label>\n                <Input type=\"text\" />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Proposal Title </Label>\n                <Input type=\"textarea\" rows=\"5\" />\n              </FormGroup>\n            </Col>\n          </Row>\n          <div className=\"wizard-actions d-flex justify-content-between\">\n            <Button color=\"primary\" onClick={() => this.handleActiveStep(0)}>\n              Prev\n            </Button>\n            <Button color=\"primary\" onClick={() => this.handleActiveStep(2)}>\n              Next\n            </Button>\n          </div>\n        </Form>\n      ),\n      step_3: (\n        <Form className=\"form-horizontal\">\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Event Name </Label>\n                <Input type=\"text\" />\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Event Location </Label>\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\n                  <option>New York</option>\n                  <option>Chicago</option>\n                  <option>San Francisco</option>\n                  <option>Boston</option>\n                </CustomInput>\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Event Status </Label>\n                <CustomInput type=\"select\" name=\"select\" id=\"status\">\n                  <option>Planning</option>\n                  <option>In Process</option>\n                  <option>Finished</option>\n                </CustomInput>\n              </FormGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <FormGroup>\n                <Label> Event Status </Label>\n                <Label className=\"mr-2\">Requirements :</Label>\n                <div className=\"stacked-checkbox\">\n                  <div className=\"d-inline-block mr-2\">\n                    <Checkbox\n                      color=\"primary\"\n                      icon={<Check className=\"vx-icon\" size={16} />}\n                      label=\"Staffing\"\n                      defaultChecked={false}\n                    />\n                  </div>\n                  <div className=\"d-inline-block\">\n                    <Checkbox\n                      color=\"primary\"\n                      icon={<Check className=\"vx-icon\" size={16} />}\n                      label=\"Catering\"\n                      defaultChecked={false}\n                    />\n                  </div>\n                </div>\n              </FormGroup>\n            </Col>\n          </Row>\n          <div className=\"wizard-actions d-flex justify-content-between\">\n            <Button color=\"primary\" onClick={() => this.handleActiveStep(1)}>\n              Prev\n            </Button>\n            <Button color=\"primary\" onClick={() => alert(\"Form Submitted\")}>\n              Submit\n            </Button>\n          </div>\n        </Form>\n      ),\n    },\n  };\n\n  handleActiveStep = (step) => {\n    this.setState({\n      activeStep: step,\n    });\n  };\n\n  render() {\n    const { steps } = this.state;\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Wizard with Icons</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Wizard\n            activeStep={this.state.activeStep}\n            stepsTitle={[\n              <Home size={20} />,\n              <Briefcase size={20} />,\n              <Image size={20} />,\n            ]}\n            stepsContent={[steps.step_1, steps.step_2, steps.step_3]}\n          ></Wizard>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default WizardIcons;\n","import React from \"react\";\nimport Wizard from \"./WizardComponent\";\nimport {\n  AvForm,\n  AvInput,\n  AvGroup,\n  AvFeedback,\n  AvField,\n} from \"availity-reactstrap-validation\";\nimport {\n  Label,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  Button,\n} from \"reactstrap\";\nimport Checkbox from \"../checkbox/CheckboxesDev\";\nimport { Check } from \"react-feather\";\nclass WizardValidation extends React.Component {\n  state = {\n    activeStep: 0,\n    steps: {\n      step_1: (\n        <AvForm\n          className=\"form-horizontal\"\n          onSubmit={(e, errors) => this.handleActiveStep(1, errors)}\n        >\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <AvGroup>\n                <Label> First Name </Label>\n                <AvInput name=\"first-name\" type=\"text\" required />\n                <AvFeedback>Please enter valid First Name</AvFeedback>\n              </AvGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <AvGroup>\n                <Label> Last Name </Label>\n                <AvInput name=\"last-name\" type=\"text\" required />\n                <AvFeedback>Please enter valid Last Name</AvFeedback>\n              </AvGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <AvGroup>\n                <Label> Email </Label>\n                <AvInput name=\"last-name\" type=\"email\" required />\n                <AvFeedback>Please enter valid email</AvFeedback>\n              </AvGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <AvGroup>\n                <AvField\n                  type=\"select\"\n                  name=\"city-name\"\n                  label=\"City Name\"\n                  required\n                >\n                  <option selected>Select City</option>\n                  <option>New York</option>\n                  <option>Chicago</option>\n                  <option>San Francisco</option>\n                  <option>Boston</option>\n                </AvField>\n              </AvGroup>\n            </Col>\n          </Row>\n          <div className=\"wizard-actions d-flex justify-content-between\">\n            <Button color=\"primary\" disabled>\n              Prev\n            </Button>\n            <Button color=\"primary\">Next</Button>\n          </div>\n        </AvForm>\n      ),\n      step_2: (\n        <AvForm\n          className=\"form-horizontal\"\n          onSubmit={(e, errors) => this.handleActiveStep(2, errors)}\n        >\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <AvGroup>\n                <Label> Proposal Title </Label>\n                <AvInput name=\"Proposal-Title\" type=\"text\" required />\n                <AvFeedback>Please enter valid Title</AvFeedback>\n              </AvGroup>\n              <AvGroup>\n                <Label> Job Title </Label>\n                <AvInput name=\"Job-Title\" type=\"text\" required />\n                <AvFeedback>Please enter valid Job Title</AvFeedback>\n              </AvGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <AvGroup>\n                <Label> Proposal Description </Label>\n                <AvInput name=\"description\" type=\"textarea\" rows=\"5\" required />\n                <AvFeedback>Please enter valid Description</AvFeedback>\n              </AvGroup>\n            </Col>\n          </Row>\n          <div className=\"wizard-actions d-flex justify-content-between\">\n            <Button color=\"primary\" onClick={() => this.handleActiveStep(0)}>\n              Prev\n            </Button>\n            <Button color=\"primary\">Next</Button>\n          </div>\n        </AvForm>\n      ),\n      step_3: (\n        <AvForm\n          className=\"form-horizontal\"\n          onSubmit={(e, errors) =>\n            errors.length === 0 && alert(\"Form Submitted\")\n          }\n        >\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              <AvGroup>\n                <Label> Event Name </Label>\n                <AvInput name=\"Event-Name\" type=\"text\" required />\n                <AvFeedback>Event Name</AvFeedback>\n              </AvGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <AvGroup>\n                <AvField\n                  type=\"select\"\n                  name=\"city-name\"\n                  label=\"City Name\"\n                  required\n                >\n                  <option selected>Select City</option>\n                  <option>New York</option>\n                  <option>Chicago</option>\n                  <option>San Francisco</option>\n                  <option>Boston</option>\n                </AvField>\n              </AvGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <AvGroup>\n                <AvField\n                  type=\"select\"\n                  name=\"status\"\n                  label=\"Event Status\"\n                  required\n                >\n                  <option>Planning</option>\n                  <option>In Process</option>\n                  <option>Finished</option>\n                </AvField>\n              </AvGroup>\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              <AvGroup>\n                <Label> Event Status </Label>\n                <Label className=\"mr-2\">Requirements :</Label>\n                <div className=\"stacked-checkbox\">\n                  <div className=\"d-inline-block mr-2\">\n                    <Checkbox\n                      color=\"primary\"\n                      icon={<Check className=\"vx-icon\" size={16} />}\n                      label=\"Staffing\"\n                      defaultChecked={false}\n                    />\n                  </div>\n                  <div className=\"d-inline-block\">\n                    <Checkbox\n                      color=\"primary\"\n                      icon={<Check className=\"vx-icon\" size={16} />}\n                      label=\"Catering\"\n                      defaultChecked={false}\n                    />\n                  </div>\n                </div>\n              </AvGroup>\n            </Col>\n          </Row>\n          <div className=\"wizard-actions d-flex justify-content-between\">\n            <Button color=\"primary\" onClick={() => this.handleActiveStep(1)}>\n              Prev\n            </Button>\n            <Button color=\"primary\">Submit</Button>\n          </div>\n        </AvForm>\n      ),\n    },\n  };\n\n  handleActiveStep = (step, errors) => {\n    if (errors.length <= 0) {\n      this.setState({\n        activeStep: step,\n      });\n    }\n  };\n\n  render() {\n    const { steps } = this.state;\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Wizard with Validation</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Wizard\n            activeStep={this.state.activeStep}\n            stepsTitle={[1, 2, 3]}\n            stepsContent={[steps.step_1, steps.step_2, steps.step_3]}\n          ></Wizard>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default WizardValidation;\n","import React from \"react\";\nimport BreadCrumbs from \"../../@dev/breadCrumbs/BreadCrumb\";\nimport { Row, Col } from \"reactstrap\";\nimport WizardBasic from \"./WizardBasic\";\nimport WizardIcons from \"./WizardIcons\";\nimport WizardValidation from \"./WizardValidation\";\nclass Wizard extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Wizard\"\n          breadCrumbParent=\"Extra Components\"\n          breadCrumbActive=\"Wizard\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <WizardBasic />\n          </Col>\n          <Col sm=\"12\">\n            <WizardIcons />\n          </Col>\n          <Col sm=\"12\">\n            <WizardValidation />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\nexport default Wizard;\n","import React from \"react\";\nclass CheckboxesDev extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    );\n  }\n}\n\nexport default CheckboxesDev;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane,\n  Form,\n  Button,\n} from \"reactstrap\";\nimport { AvForm } from \"availity-reactstrap-validation\";\n\nclass DevWizard extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.activeStep) {\n      if (props.activeStep !== state.activeStep) {\n        if (props.validate) {\n          if (state.errors.length === 0 && state.submitted)\n            return { activeStep: props.activeStep };\n        } else return { activeStep: props.activeStep };\n      }\n    }\n    return null;\n  }\n\n  state = {\n    activeStep: this.props.activeStep ? this.props.activeStep : 0,\n    errors: [],\n    values: [],\n  };\n\n  handleNextStep = (index, total, errors = []) => {\n    let activeStep = this.state.activeStep;\n    let validation = this.props.validate;\n\n    if (!validation) {\n      if (activeStep <= index && activeStep !== total) {\n        this.setState({\n          activeStep: activeStep + 1,\n        });\n      }\n    } else {\n      if (errors.length === 0 && activeStep <= index && activeStep !== total) {\n        this.setState({\n          activeStep: activeStep + 1,\n        });\n      } else if (errors.length && this.props.onValidationError) {\n        this.props.onValidationError(this.state.errors);\n      } else {\n        return;\n      }\n    }\n  };\n\n  handlePreviousStep = (index) => {\n    let activeStep = this.state.activeStep;\n    if (activeStep >= index)\n      this.setState({\n        activeStep: activeStep - 1,\n      });\n  };\n\n  handleEnableAllSteps = (index) => {\n    if (this.props.enableAllSteps) {\n      this.setState({ activeStep: index });\n    }\n  };\n\n  handleSubmit = (e) => {\n    if (\n      this.props.steps.length - 1 === this.state.activeStep &&\n      this.props.onFinish\n    ) {\n      this.props.onFinish(e);\n    }\n  };\n\n  render() {\n    let FormTag = this.props.validate ? AvForm : Form;\n\n    return (\n      <React.Fragment>\n        <Nav\n          className={`vx-wizard ${\n            this.props.className ? this.props.className : \"\"\n          }`}\n          tabs\n        >\n          {this.props.steps.map((item, i) => {\n            return (\n              <NavItem\n                className=\"step-wrapper\"\n                key={i}\n                onClick={() => this.handleEnableAllSteps(i)}\n              >\n                <NavLink\n                  className={classnames(`step step-${i}`, {\n                    active: this.state.activeStep === i ? true : false,\n                    done: i < this.state.activeStep,\n                  })}\n                >\n                  <span className=\"step-text\">{item.title}</span>\n                </NavLink>\n              </NavItem>\n            );\n          })}\n        </Nav>\n        <TabContent\n          className={`vx-wizard-content ${\n            this.props.tabPaneClass ? this.props.tabPaneClass : \"\"\n          }`}\n          activeTab={this.state.activeStep}\n        >\n          {this.props.steps.map((item, i) => {\n            return (\n              <TabPane\n                className={`step-content step-${i}-content`}\n                key={i}\n                tabId={i}\n              >\n                <FormTag\n                  className=\"form-horizontal\"\n                  onSubmit={(e, errors, values) => {\n                    this.setState({ errors, values });\n                    if (!this.props.validate) e.preventDefault();\n                    this.handleNextStep(i, this.props.steps.length - 1, errors);\n                    this.handleSubmit(e);\n                  }}\n                >\n                  {item.content}\n                  {this.props.pagination ? (\n                    <div className=\"wizard-actions d-flex justify-content-between\">\n                      <Button\n                        color=\"primary\"\n                        disabled={this.state.activeStep === 0}\n                        onClick={() => this.handlePreviousStep(i)}\n                      >\n                        Prev\n                      </Button>\n                      <Button type=\"submit\" color=\"primary\">\n                        {this.props.steps.length - 1 === i &&\n                        !this.props.finishBtnText\n                          ? \"Submit\"\n                          : this.props.steps.length - 1 === i &&\n                            this.props.finishBtnText\n                          ? this.props.finishBtnText\n                          : \"Next\"}\n                      </Button>\n                    </div>\n                  ) : null}\n                </FormTag>\n              </TabPane>\n            );\n          })}\n        </TabContent>\n      </React.Fragment>\n    );\n  }\n}\n\nDevWizard.propTypes = {\n  className: PropTypes.string,\n  steps: PropTypes.array.isRequired,\n  validate: PropTypes.bool,\n  enableAllSteps: PropTypes.bool,\n  finishBtnText: PropTypes.string,\n  onFinish: PropTypes.func,\n  pagination: PropTypes.bool,\n  onValidationError: PropTypes.func,\n  activeStep: PropTypes.number,\n};\n\nDevWizard.defaultProps = {\n  pagination: true,\n};\n\nexport default DevWizard;\n"],"sourceRoot":""}