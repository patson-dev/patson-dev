{"version":3,"sources":["redux/actions/todo/index.js","views/apps/todo/TodoSidebar.js","views/apps/todo/TodoList.js","views/apps/todo/TaskSidebar.js","views/apps/todo/Todo.js","components/@dev/checkbox/CheckboxesDev.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js"],"names":["getTodos","routeParams","dispatch","a","axios","get","params","then","result","type","todos","data","catch","err","console","log","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","TodoSidebar","Fragment","className","onClick","props","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","this","routerProps","location","pathname","React","Component","connect","filter","history","push","TodoList","state","handleUpdateTask","currentLocation","handleOnChange","e","setState","target","searchTask","match","app","routerFilter","todosArr","length","filteredTodos","renderTodos","map","i","key","icon","label","checked","stopPropagation","onChange","title","tags","tag","trashTask","desc","FormGroup","Input","placeholder","routeParam","todoApp","getState","post","response","val","TaskSidebar","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","prevState","addTaskState","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","updateLabel","rows","updateTask","addNewTask","disabled","outline","task","mql","window","matchMedia","TODO","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","open","mediaQueryChanged","handleAddTask","status","undefined","handleUndoChanges","arr","addListener","removeListener","Consumer","context","sidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction","CheckboxesDev","defaultChecked","defaultStyles","position","top","left","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","_this","call","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","saveSidebarWidth","componentDidUpdate","isTouching","ev","targetTouches","identifier","clientX","ind","touchWidth","touchSidebarWidth","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","Math","abs","width","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","style","root","role","rootId","hasBoxShadow","shadow","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","createElement","ref","sidebarId","overlayClassName","overlayId","contentId","children","defaultProps","defineProperty","module","exports","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","enumerable","forEach"],"mappings":"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","file":"static/js/54.4c73f9d9.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport { history } from \"../../../history\"\r\n\r\nexport const getTodos = routeParams => {\r\n  return async dispatch => {\r\n    await axios\r\n      .get(\"api/apps/todo\", {\r\n        params: routeParams\r\n      })\r\n      .then(result => {\r\n        dispatch({\r\n          type: \"GET_TODOS\",\r\n          todos: result.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\nexport const completeTask = todo => {\r\n  return dispatch => {\r\n    dispatch({ type: \"COMPLETE_TASK\", id: todo.id, value: todo.isCompleted })\r\n  }\r\n}\r\n\r\nexport const starTask = todo => {\r\n  return dispatch => {\r\n    Promise.all([\r\n      dispatch({ type: \"STAR_TASK\", id: todo.id, value: todo.isStarred })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const importantTask = todo => {\r\n  \r\n  return dispatch => {\r\n    Promise.all([\r\n      dispatch({ type: \"IMPORTANT_TASK\", id: todo.id, value: todo.isImportant })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const trashTask = id => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios\r\n      .post(\"/api/app/todo/trash-todo\", id)\r\n      .then(response => dispatch({ type: \"TRASH_TASK\", id }))\r\n      .then(dispatch(getTodos(params)))\r\n  }\r\n}\r\n\r\nexport const updateTodo = todo => {\r\n  const request = axios.post(\"/api/apps/todo/update-todo\", todo)\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then(response => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: \"UPDATE_TODO\",\r\n          todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateTask = (id, title, desc) => {\r\n  return dispatch => {\r\n    dispatch({ type: \"UPDATE_TASK\", id, title, desc })\r\n  }\r\n}\r\n\r\nexport const updateLabel = (id, label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: \"UPDATE_LABEL\", label, id })\r\n  }\r\n}\r\n\r\nexport const addNewTask = task => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios.post(\"/api/apps/todo/new-task\", { task }).then(response => {\r\n      dispatch({ type: \"ADD_TASK\", task })\r\n      dispatch(getTodos(params))\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchTask = val => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SEARCH_TASK\",\r\n      val\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilter = filter => {\r\n  return dispatch => {\r\n    dispatch({ type: \"CHANGE_FILTER\", filter })\r\n    history.push(`/todo/${filter}`)\r\n    dispatch(getTodos({ filter }))\r\n  }\r\n}\r\n","import React from \"react\"\nimport { Button, ListGroup, ListGroupItem } from \"reactstrap\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { X, Layers, Star, Info, Check, Trash } from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport { changeFilter } from \"../../../redux/actions/todo/index\"\nclass TodoSidebar extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <span\n          className=\"sidebar-close-icon\"\n          onClick={() => this.props.mainSidebar(false)}\n        >\n          <X size={15} />\n        </span>\n        <div className=\"todo-app-menu\">\n          <div className=\"add-task\">\n            <Button.Ripple\n              block\n              className=\"btn-block my-1\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.addTask(\"open\")\n                this.props.mainSidebar(false)\n              }}\n            >\n              Add Task\n            </Button.Ripple>\n          </div>\n          <PerfectScrollbar\n            className=\"sidebar-menu-list\"\n            options={{\n              wheelPropagation: false\n            }}\n          >\n            <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0 pt-0\"\n                action\n                onClick={() => {\n                  this.props.changeFilter(\"all\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/all\"\n                    ? true\n                    : false\n                }\n              >\n                <Layers size={22} />\n                <span className=\"align-middle ml-1\">All</span>\n              </ListGroupItem>\n            </ListGroup>\n            <hr />\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\n            <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"starred\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/starred\"\n                    ? true\n                    : false\n                }\n              >\n                <Star size={22} />\n                <span className=\"align-middle ml-1\">Starred</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"important\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/important\"\n                    ? true\n                    : false\n                }\n              >\n                <Info size={22} />\n                <span className=\"align-middle ml-1\">Important</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"completed\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/completed\"\n                    ? true\n                    : false\n                }\n              >\n                <Check size={22} />\n                <span className=\"align-middle ml-1\">Completed</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"trashed\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/trashed\"\n                    ? true\n                    : false\n                }\n              >\n                <Trash size={22} />\n                <span className=\"align-middle ml-1\">Trashed</span>\n              </ListGroupItem>\n            </ListGroup>\n            <hr />\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\n            <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"frontend\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/frontend\"\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-primary align-middle\" />\n                <span className=\"align-middle ml-1\">Frontend</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"backend\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/backend\"\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-warning align-middle\" />\n                <span className=\"align-middle ml-1\">Backend</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"doc\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/doc\"\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-success align-middle\" />\n                <span className=\"align-middle ml-1\">Doc</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"bug\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/todo/bug\"\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-danger align-middle\" />\n                <span className=\"align-middle ml-1\">Bug</span>\n              </ListGroupItem>\n            </ListGroup>\n          </PerfectScrollbar>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(null, { changeFilter })(TodoSidebar)\n","import React from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport { Menu, Search, Check, Info, Star, Trash } from \"react-feather\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { connect } from \"react-redux\";\nimport {\n  getTodos,\n  completeTask,\n  starTask,\n  importantTask,\n  trashTask,\n  searchTask,\n} from \"../../../redux/actions/todo/index\";\nimport Checkbox from \"../../../components/@dev/checkbox/CheckboxesDev\";\nclass TodoList extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.app.todo.routeParam !== state.currentLocation) {\n      return {\n        todos: props.app.todo.todos,\n      };\n    }\n    // Return null if the state hasn't changed\n    return null;\n  }\n  state = {\n    todos: [],\n    handleUpdateTask: null,\n    currentLocation: this.props.routerProps.location.pathname,\n    value: \"\",\n  };\n  async componentDidMount() {\n    await this.props.getTodos(this.props.routerProps.match.params);\n    this.setState({\n      todos: this.props.app.todo.todos,\n      handleUpdateTask: this.props.handleUpdateTask,\n    });\n  }\n\n  handleOnChange = (e) => {\n    this.setState({ value: e.target.value });\n    this.props.searchTask(e.target.value);\n  };\n\n  render() {\n    const { todos, handleUpdateTask, value } = this.state;\n    let routerFilter = this.props.routerProps.match.params.filter;\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos;\n    let renderTodos =\n      todosArr.length > 0 ? (\n        todosArr.map((todo, i) => {\n          return (\n            <li\n              className={`todo-item ${todo.isCompleted ? \"completed\" : \"\"}`}\n              key={i}\n              onClick={() => {\n                handleUpdateTask(todo);\n              }}\n            >\n              <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\n                <div className=\"todo-title-area d-flex align-items-center\">\n                  <div className=\"title-wrapper d-flex\">\n                    <Checkbox\n                      color=\"primary\"\n                      className=\"user-checkbox\"\n                      icon={<Check className=\"vx-icon\" size={12} />}\n                      label={\"\"}\n                      checked={todo.isCompleted}\n                      size=\"sm\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        this.props.completeTask(todo);\n                      }}\n                      onChange={(e) => e.stopPropagation()}\n                    />\n                    <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\n                  </div>\n                  {todo.tags.length > 0 ? (\n                    <div className=\"chip-wrapper\">\n                      {todo.tags.map((tag, i) => (\n                        <div className=\"chip mb-0\" key={i}>\n                          <div className=\"chip-body\">\n                            <span className=\"chip-text\">\n                              <span\n                                className={`bullet bullet-${\n                                  tag === \"backend\"\n                                    ? \"warning\"\n                                    : tag === \"doc\"\n                                    ? \"success\"\n                                    : tag === \"bug\"\n                                    ? \"danger\"\n                                    : \"primary\"\n                                } bullet-xs`}\n                              />\n                              <span className=\"text-capitalize ml-25\">\n                                {tag}\n                              </span>\n                            </span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : null}\n                </div>\n                <div\n                  className={`todo-item-action d-flex ${\n                    routerFilter === \"trashed\" ? \"justify-content-end\" : \"\"\n                  }`}\n                >\n                  <div\n                    className={`todo-item-info d-inline-block ${\n                      routerFilter === \"trashed\" ? \"mr-1\" : \"mr-1 mr-sm-0\"\n                    }`}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      this.props.importantTask(todo);\n                    }}\n                  >\n                    <Info\n                      size={17}\n                      className={`${todo.isImportant ? \"text-success\" : \"\"}`}\n                    />\n                  </div>\n                  <div\n                    className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      this.props.starTask(todo);\n                    }}\n                  >\n                    <Star\n                      size={17}\n                      className={`${todo.isStarred ? \"text-warning\" : \"\"}`}\n                    />\n                  </div>\n                  {routerFilter !== \"trashed\" ? (\n                    <div\n                      className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        this.props.trashTask(todo.id);\n                      }}\n                    >\n                      <Trash size={17} />\n                    </div>\n                  ) : null}\n                </div>\n              </div>\n              {todo.desc.length > 0 ? (\n                <p className=\"todo-desc truncate mb-0\">{todo.desc}</p>\n              ) : (\n                \"\"\n              )}\n            </li>\n          );\n        })\n      ) : (\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\n          No tasks at this time\n        </p>\n      );\n\n    return (\n      <div className=\"content-right\">\n        <div className=\"todo-app-area\">\n          <div className=\"todo-app-list-wrapper\">\n            <div className=\"todo-app-list\">\n              <div className=\"app-fixed-search\">\n                <div\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\n                  onClick={() => this.props.mainSidebar(true)}\n                >\n                  <Menu size={24} />\n                </div>\n                <FormGroup className=\"position-relative has-icon-left m-0 d-inline-block d-lg-block\">\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    onChange={(e) => this.handleOnChange(e)}\n                    value={value}\n                  />\n                  <div className=\"form-control-position\">\n                    <Search size={15} />\n                  </div>\n                </FormGroup>\n              </div>\n              <PerfectScrollbar\n                className=\"todo-task-list\"\n                options={{\n                  wheelPropagation: false,\n                }}\n              >\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\n              </PerfectScrollbar>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    app: state.todoApp,\n  };\n};\nexport default connect(mapStateToProps, {\n  getTodos,\n  completeTask,\n  starTask,\n  importantTask,\n  trashTask,\n  searchTask,\n})(TodoList);\n","import React from \"react\";\nimport {\n  Input,\n  Button,\n  FormGroup,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n} from \"reactstrap\";\nimport { X, Info, Star, Tag, Check } from \"react-feather\";\nimport Checkbox from \"../../../components/@dev/checkbox/CheckboxesDev\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { connect } from \"react-redux\";\nimport {\n  starTask,\n  completeTask,\n  importantTask,\n  updateTask,\n  updateLabel,\n  addNewTask,\n} from \"../../../redux/actions/todo/index\";\nclass TaskSidebar extends React.Component {\n  // static getDerivedStateFromProps (props, state){\n  //   if (\n  //    ( props.taskToUpdate !== null &&\n  //     props.taskToUpdate.title !== state.taskTitle) ||\n  //     (props.taskToUpdate !== null && props.taskToUpdate.isCompleted !== state.newTask.isCompleted)\n  //   ) {\n  //     let todosArr = props.app.todo.todos\n  //     let receivedTask =\n  //       props.taskToUpdate !== null ? props.taskToUpdate : 1\n  //     let filteredTask = todosArr.filter(i => i.id === receivedTask.id)\n  //     let taskToUpdate, taskTitle, taskDesc\n  //     filteredTask.map(task => {\n  //       return (\n  //         (taskToUpdate = task),\n  //         (taskTitle = task.title),\n  //         (taskDesc = task.desc)\n  //       )\n  //     })\n  //     return {\n  //       taskToUpdate,\n  //       taskTitle,\n  //       taskDesc\n  //     }\n  //   }\n  //   return null\n  // }\n\n  state = {\n    taskToUpdate: null,\n    taskTitle: \"\",\n    taskDesc: \"\",\n    taskStatus: false,\n    taskStarred: false,\n    taskImportant: false,\n    newTask: {\n      title: \"\",\n      desc: \"\",\n      tags: [],\n      isCompleted: false,\n      isImportant: false,\n      isStarred: false,\n    },\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (this.props.taskToUpdate !== null &&\n        this.state.taskToUpdate !== this.props.taskToUpdate) ||\n      (this.props.taskToUpdate !== null &&\n        this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\n      (this.props.taskToUpdate !== null &&\n        this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\n      (this.props.taskToUpdate !== null &&\n        this.state.taskImportant !== this.props.taskToUpdate.isImportant)\n    ) {\n      this.setState({\n        taskToUpdate: this.props.taskToUpdate,\n        taskTitle: this.props.taskToUpdate.title,\n        taskDesc: this.props.taskToUpdate.desc,\n        taskStatus: this.props.taskToUpdate.isCompleted,\n        taskStarred: this.props.taskToUpdate.isStarred,\n        taskImportant: this.props.taskToUpdate.isImportant,\n      });\n    } else {\n      return;\n    }\n  }\n\n  handleNewTaskTags = (tag) => {\n    let tagsArr = this.state.newTask.tags;\n    if (tagsArr.includes(tag)) {\n      tagsArr.splice(tagsArr.indexOf(tag), 1);\n    } else {\n      tagsArr.push(tag);\n    }\n    this.setState({\n      ...this.state.newTask,\n      tags: tag,\n    });\n  };\n\n  renderTags = (taskArr) => {\n    return taskArr.map((tag, i) => (\n      <div className=\"chip mb-0 mr-50\" key={i}>\n        <div className=\"chip-body\">\n          <span className=\"chip-text\">\n            <span\n              className={`bullet bullet-${\n                tag === \"backend\"\n                  ? \"warning\"\n                  : tag === \"doc\"\n                  ? \"success\"\n                  : tag === \"bug\"\n                  ? \"danger\"\n                  : \"primary\"\n              } bullet-xs`}\n            />\n            <span className=\"text-capitalize ml-25\">{tag}</span>\n          </span>\n        </div>\n      </div>\n    ));\n  };\n\n  render() {\n    const {\n      taskToUpdate,\n      taskTitle,\n      taskDesc,\n      newTask,\n      taskStatus,\n    } = this.state;\n\n    return (\n      <div\n        className={`task-sidebar ${\n          this.props.addTaskState === true ? \"show\" : \"\"\n        }`}\n      >\n        <div className=\"task-header\">\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"task-type-title text-bold-600\">\n              <h3>\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\n                  ? \"Update Task\"\n                  : \"Add Task\"}\n              </h3>\n            </div>\n            <div className=\"close-icon\">\n              <X\n                className=\"cursor-pointer\"\n                size={20}\n                onClick={() => this.props.addTask(\"close\")}\n              />\n            </div>\n          </div>\n        </div>\n        <PerfectScrollbar>\n          <div className=\"task-body\">\n            <div className=\"d-flex justify-content-between mb-2\">\n              <div className=\"mark-complete\">\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && (\n                  <Checkbox\n                    color=\"primary\"\n                    className=\"user-checkbox\"\n                    icon={<Check className=\"vx-icon\" size={15} />}\n                    label={\"\"}\n                    checked={taskStatus}\n                    onChange={(e) => {\n                      this.props.completeTask(this.props.taskToUpdate);\n                    }}\n                  />\n                )}\n              </div>\n              <div className=\"task-actions\">\n                <Info\n                  size={20}\n                  className={`mr-50 ${\n                    (this.props.taskToUpdate !== null &&\n                      this.state.taskImportant) ||\n                    newTask.isImportant\n                      ? \"text-success\"\n                      : \"\"\n                  }`}\n                  onClick={() => {\n                    if (this.props.taskToUpdate !== null) {\n                      this.props.importantTask(this.props.taskToUpdate);\n                    } else {\n                      this.setState({\n                        newTask: {\n                          ...this.state.newTask,\n                          isImportant: !this.state.newTask.isImportant,\n                        },\n                      });\n                    }\n                  }}\n                />\n                <Star\n                  size={20}\n                  className={`mr-50 ${\n                    (this.props.taskToUpdate !== null &&\n                      this.state.taskStarred) ||\n                    newTask.isStarred\n                      ? \"text-warning\"\n                      : \"\"\n                  }`}\n                  onClick={() => {\n                    if (this.props.taskToUpdate !== null) {\n                      this.props.starTask(this.props.taskToUpdate);\n                    } else {\n                      this.setState({\n                        newTask: {\n                          ...this.state.newTask,\n                          isStarred: !this.state.newTask.isStarred,\n                        },\n                      });\n                    }\n                  }}\n                />\n                <UncontrolledDropdown className=\"d-inline-block\">\n                  <DropdownToggle tag=\"span\">\n                    <Tag className=\"mr-50\" size={20} />\n                  </DropdownToggle>\n                  <DropdownMenu tag=\"ul\" right>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Frontend\"}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\n                              \"frontend\"\n                            )) ||\n                          newTask.tags.includes(\"frontend\")\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onChange={(e) => {\n                          e.stopPropagation();\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"frontend\");\n                          else this.handleNewTaskTags(\"frontend\");\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Backend\"}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"backend\")) ||\n                          newTask.tags.includes(\"backend\")\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={(e) => e.stopPropagation()}\n                        onChange={(e) => {\n                          e.stopPropagation();\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"backend\");\n                          else this.handleNewTaskTags(\"backend\");\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Doc\"}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"doc\")) ||\n                          newTask.tags.includes(\"doc\")\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={(e) => e.stopPropagation()}\n                        onChange={(e) => {\n                          e.stopPropagation();\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"doc\");\n                          else this.handleNewTaskTags(\"doc\");\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Bug\"}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"bug\")) ||\n                          newTask.tags.includes(\"bug\")\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={(e) => e.stopPropagation()}\n                        onChange={(e) => {\n                          e.stopPropagation();\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"bug\");\n                          else this.handleNewTaskTags(\"bug\");\n                        }}\n                      />\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </div>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\n                }\n                onChange={(e) => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.setState({\n                      taskTitle: e.target.value,\n                    });\n                  } else {\n                    this.setState({\n                      newTask: {\n                        ...this.state.newTask,\n                        title: e.target.value,\n                      },\n                    });\n                  }\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                type=\"textarea\"\n                placeholder=\"Description\"\n                rows=\"5\"\n                value={\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\n                }\n                onChange={(e) => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.setState({\n                      taskDesc: e.target.value,\n                    });\n                  } else {\n                    this.setState({\n                      newTask: {\n                        ...this.state.newTask,\n                        desc: e.target.value,\n                      },\n                    });\n                  }\n                }}\n              />\n            </FormGroup>\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\n              {this.props.taskToUpdate !== null &&\n              this.props.taskToUpdate.tags &&\n              this.props.taskToUpdate.tags.length > 0\n                ? this.renderTags(this.props.taskToUpdate.tags)\n                : null}\n            </div>\n\n            <hr className=\"my-2\" />\n            <div className=\"d-flex justify-content-end\">\n              <Button.Ripple\n                className=\"mr-50\"\n                color=\"primary\"\n                onClick={() => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.props.updateTask(taskToUpdate.id, taskTitle, taskDesc);\n                  } else {\n                    this.props.addNewTask(this.state.newTask);\n                  }\n                  this.props.addTask(\"close\");\n                  this.setState({\n                    newTask: {\n                      title: \"\",\n                      desc: \"\",\n                      tags: [],\n                      isCompleted: false,\n                      isImportant: false,\n                      isStarred: false,\n                    },\n                  });\n                }}\n                disabled={\n                  taskTitle.length > 0 || newTask.title.length > 0\n                    ? false\n                    : true\n                }\n              >\n                {taskToUpdate &&\n                taskToUpdate.id &&\n                this.props.taskToUpdate !== null\n                  ? \"Update\"\n                  : \"Add\"}\n              </Button.Ripple>\n              <Button.Ripple\n                color=\"light\"\n                outline\n                onClick={() => {\n                  this.props.addTask(\"close\");\n                  this.setState({\n                    newTask: {\n                      title: \"\",\n                      desc: \"\",\n                      tags: [],\n                      isCompleted: false,\n                      isImportant: false,\n                      isStarred: false,\n                    },\n                  });\n                }}\n              >\n                Cancel\n              </Button.Ripple>\n            </div>\n          </div>\n        </PerfectScrollbar>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    app: state.todoApp,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  completeTask,\n  importantTask,\n  starTask,\n  updateTask,\n  updateLabel,\n  addNewTask,\n})(TaskSidebar);\n","import React from \"react\"\nimport Sidebar from \"react-sidebar\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport TodoSidebar from \"./TodoSidebar\"\nimport TodoList from \"./TodoList\"\nimport TaskSidebar from \"./TaskSidebar\"\nimport \"../../../assets/scss/pages/app-todo.scss\"\nconst mql = window.matchMedia(`(min-width: 992px)`)\n\nclass TODO extends React.Component {\n  state = {\n    addTask: false,\n    sidebarDocked: mql.matches,\n    sidebarOpen: false,\n    taskToUpdate: null,\n    prevState: null\n  }\n  UNSAFE_componentWillMount() {\n    mql.addListener(this.mediaQueryChanged)\n  }\n\n  componentWillUnmount() {\n    mql.removeListener(this.mediaQueryChanged)\n  }\n\n  onSetSidebarOpen = open => {\n    this.setState({ sidebarOpen: open })\n  }\n\n  mediaQueryChanged = () => {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\n  }\n\n  handleAddTask = status => {\n    status === \"open\"\n      ? this.setState({ addTask: true })\n      : this.setState({ addTask: false, taskToUpdate: null })\n  }\n  handleUpdateTask = todo => {\n    if (todo !== undefined) {\n      this.setState({ addTask: true, taskToUpdate: todo })\n    } else {\n      this.setState({ taskToUpdate: null })\n    }\n  }\n\n  handleUndoChanges = arr => {\n    this.setState({\n      prevState: arr\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"todo-application position-relative\">\n        <div\n          className={`app-content-overlay ${\n            this.state.addTask || this.state.sidebarOpen ? \"show\" : \"\"\n          }`}\n          onClick={() => {\n            this.handleAddTask(\"close\")\n            this.onSetSidebarOpen(false)\n          }}\n        />\n        <ContextLayout.Consumer>\n          {context => (\n            <Sidebar\n              sidebar={\n                <TodoSidebar\n                  routerProps={this.props}\n                  addTask={this.handleAddTask}\n                  mainSidebar={this.onSetSidebarOpen}\n                />\n              }\n              docked={this.state.sidebarDocked}\n              open={this.state.sidebarOpen}\n              sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\n              touch={false}\n              contentClassName=\"sidebar-children d-none\"\n              pullRight={context.state.direction === \"rtl\"}>\n              \"\"\n            </Sidebar>\n          )}\n        </ContextLayout.Consumer>\n        <TodoList\n          routerProps={this.props}\n          handleUpdateTask={this.handleUpdateTask}\n          mainSidebar={this.onSetSidebarOpen}\n          prevState={this.state.prevState}\n        />\n        <TaskSidebar\n          addTask={this.handleAddTask}\n          addTaskState={this.state.addTask}\n          taskToUpdate={this.state.taskToUpdate}\n          newTask={this.state.newTask}\n          mainSidebar={this.onSetSidebarOpen}\n          handleUndoChanges={this.handleUndoChanges}\n        />\n      </div>\n    )\n  }\n}\n\nexport default TODO\n","import React from \"react\";\nclass CheckboxesDev extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    );\n  }\n}\n\nexport default CheckboxesDev;\n","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;"],"sourceRoot":""}